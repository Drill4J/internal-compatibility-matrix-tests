name: Matrix Tests

on:
  push:
    branches:
      - 'main'
  pull_request:

jobs:
  download-agents:
    runs-on: ${{ matrix.os }}
    env:
      GH_USER_TOKEN: ${{ secrets.GH_USER_TOKEN }}
    strategy:
      fail-fast: true
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: 17.0
          distribution: corretto
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: 7.4.2
          add-job-summary: 'on-failure'
      - name: Download Drill4J Agents
        # This step loads Drill4J agents for one task; results for other tasks are cached
        run: gradle :tests:async:executor-service:drillDownloadAgents --info
      - name: List .drill files
        run: ls ~/.drill/agents
      - name: Upload .drill folder as artifact
        uses: actions/upload-artifact@v4
        with:
          name: drill-agents-${{ matrix.os }}
          path: ~/.drill/agents
          if-no-files-found: error
  tests:
    needs: download-agents
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-14]
        java-version: [8, 11, 17, 21]
    steps:
      - name: Download .drill folder
        uses: actions/download-artifact@v4
        with:
          name: drill-agents-${{ matrix.os }}
          path: ~/.drill/agents

      - name: Set up Java ${{ matrix.java-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: ${{ matrix.java-version }}

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Determine Kotlin version for Java 21 and greater
        if: matrix.java-version >= 21
        run: echo "kotlin-version=1.9.20" >> $GITHUB_ENV

      - name: Determine Gradle Version for Java 21 and greater
        if: matrix.java-version >= 21
        run: echo "gradle-version=8.5" >> $GITHUB_ENV

      - name: Determine Gradle Version for Java 20 and lower
        if: matrix.java-version < 21
        run: echo "gradle-version=7.4.2" >> $GITHUB_ENV

      - name: Set-up Gradle ${{ env.gradle-version }}
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-version: ${{ env.gradle-version }}
          add-job-summary: 'on-failure'

      - name: Run tests
        if: matrix.os != 'macos-14' || matrix.java-version != '8' #TODO Known issue with MacOS 14+ and Java 8
        run: gradle test

      - name: Test Report (Linux)
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: startsWith(matrix.os, 'ubuntu-') && (success() || failure())
        with:
          check_name: Test Report (${{ matrix.os}},${{ matrix.java-version}})
          files: |
            tests/**/build/test-results/test/TEST-*.xml

      - name: Test Report (Windows)
        uses: EnricoMi/publish-unit-test-result-action/windows@v2
        if: startsWith(matrix.os, 'windows-') && (success() || failure())
        with:
          check_name: Test Report (${{ matrix.os}},${{ matrix.java-version}})
          files: |
            tests\**\build\test-results\test\TEST-*.xml                      

      - name: Test Report (MacOS)
        uses: EnricoMi/publish-unit-test-result-action/macos@v2
        if: startsWith(matrix.os, 'macos-') && (success() || failure())
        with:
          check_name: Test Report (${{ matrix.os}},${{ matrix.java-version}})
          files: |
            tests/**/build/test-results/test/TEST-*.xml

      - name: Upload native errors
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: native-errors-${{ matrix.os }}-java${{ matrix.java-version }}
          path: tests/**/hs_err_*.log
